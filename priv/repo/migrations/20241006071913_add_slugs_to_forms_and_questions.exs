defmodule Carumba.Repo.Migrations.AddSlugsToFormsAndQuestions do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop constraint(:questions, "questions_sub_form_id_fkey")

    drop constraint(:form_questions, "form_questions_question_id_fkey")

    drop constraint(:form_questions, "form_questions_form_id_fkey")

    drop constraint(:documents, "documents_form_id_fkey")

    drop constraint(:answers, "answers_question_id_fkey")

    alter table(:answers) do
      modify :question_id,
             references(:questions,
               column: :slug,
               name: "answers_question_id_fkey",
               type: :text,
               prefix: "public"
             )
    end

    execute("ALTER TABLE answers alter CONSTRAINT answers_question_id_fkey NOT DEFERRABLE")

    alter table(:form_questions) do
      modify :question_id,
             references(:questions,
               column: :slug,
               name: "form_questions_question_id_fkey",
               type: :text,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    drop constraint("questions", "questions_pkey")

    drop constraint("forms", "forms_pkey")

    alter table(:questions) do
      modify :slug, :text, primary_key: true
      remove :id
    end

    alter table(:forms) do
      modify :slug, :text, null: false, primary_key: true
    end

    alter table(:form_questions) do
      modify :form_id,
             references(:forms,
               column: :slug,
               name: "form_questions_form_id_fkey",
               type: :text,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    execute(
      "ALTER TABLE form_questions alter CONSTRAINT form_questions_form_id_fkey NOT DEFERRABLE"
    )

    alter table(:documents) do
      modify :form_id,
             references(:forms,
               column: :slug,
               name: "documents_form_id_fkey",
               type: :text,
               prefix: "public"
             )
    end

    execute("ALTER TABLE documents alter CONSTRAINT documents_form_id_fkey NOT DEFERRABLE")

    alter table(:questions) do
      modify :sub_form_id,
             references(:forms,
               column: :slug,
               name: "questions_sub_form_id_fkey",
               type: :text,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    alter table(:forms) do
      remove :id
    end

    execute(
      "ALTER TABLE form_questions alter CONSTRAINT form_questions_question_id_fkey NOT DEFERRABLE"
    )

    execute("ALTER TABLE questions alter CONSTRAINT questions_sub_form_id_fkey NOT DEFERRABLE")
  end

  def down do
    drop constraint("questions", "questions_pkey")

    drop constraint("forms", "forms_pkey")

    alter table(:forms) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    drop constraint(:questions, "questions_sub_form_id_fkey")

    alter table(:questions) do
      modify :sub_form_id,
             references(:forms,
               column: :id,
               name: "questions_sub_form_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    alter table(:forms) do
      modify :slug, :text, null: true, primary_key: false
    end

    alter table(:questions) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      modify :slug, :text, primary_key: false
    end

    drop constraint(:form_questions, "form_questions_question_id_fkey")

    alter table(:form_questions) do
      modify :question_id,
             references(:questions,
               column: :id,
               name: "form_questions_question_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    drop constraint(:answers, "answers_question_id_fkey")

    alter table(:answers) do
      modify :question_id,
             references(:questions,
               column: :slug,
               name: "answers_question_id_fkey",
               type: :text,
               prefix: "public"
             )
    end

    drop constraint(:documents, "documents_form_id_fkey")

    alter table(:documents) do
      modify :form_id,
             references(:forms,
               column: :id,
               name: "documents_form_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:form_questions, "form_questions_form_id_fkey")

    alter table(:form_questions) do
      modify :form_id,
             references(:forms,
               column: :id,
               name: "form_questions_form_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end
  end
end
