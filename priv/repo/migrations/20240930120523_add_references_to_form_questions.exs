defmodule Carumba.Repo.Migrations.AddReferencesToFormQuestions do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop constraint(:form_questions, "form_questions_question_id_fkey")

    drop constraint(:form_questions, "form_questions_form_id_fkey")

    alter table(:form_questions) do
      modify :form_id,
             references(:forms,
               column: :id,
               name: "form_questions_form_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    execute(
      "ALTER TABLE form_questions alter CONSTRAINT form_questions_form_id_fkey NOT DEFERRABLE"
    )

    alter table(:form_questions) do
      modify :question_id,
             references(:questions,
               column: :id,
               name: "form_questions_question_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    execute(
      "ALTER TABLE form_questions alter CONSTRAINT form_questions_question_id_fkey NOT DEFERRABLE"
    )
  end

  def down do
    drop constraint(:form_questions, "form_questions_question_id_fkey")

    alter table(:form_questions) do
      modify :question_id,
             references(:questions,
               column: :id,
               name: "form_questions_question_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:form_questions, "form_questions_form_id_fkey")

    alter table(:form_questions) do
      modify :form_id,
             references(:forms,
               column: :id,
               name: "form_questions_form_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end
  end
end
